{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nlight LightGood = light(Brain.ThreeWirePort.A);\n\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n#include <string>\n\nvoid printB(const char* words,int cur = 0,bool replace = true) {\n  cur > 0 && replace ?\n  Brain.Screen.clearLine(cur):\n  Brain.Screen.clearLine();\n  if(cur > 0) Brain.Screen.setCursor(cur,1);\n  Brain.Screen.print(words);\n}\n\nvoid printB(double words,int cur = 0,bool replace = true) {\n  cur > 0 && replace ?\n  Brain.Screen.clearLine(cur):\n  Brain.Screen.clearLine();\n  if(cur > 0) Brain.Screen.setCursor(cur,1);\n  Brain.Screen.print(words);\n}\n\n// Allows for easier use of the VEX Library\nusing namespace vex;\nusing std::string;\n\nint main() {\n  while(true) {\n    int thresh = LightGood.brightness();\n    printB(thresh,1);\n    const char* col = \"unknown\";\n    if(thresh >= 31 && thresh <= 51) col = \"red\";\n    if(thresh > 51) col = \"glass\";\n    if(thresh < 31) col = \"metal\";\n    printB(col,2);\n    //red\n    //41\n    //10 err\n    //67\n    //stable\n\n    //metal\n    //24\n    //unstable 2+-\n    //60-80\n    //10 err\n\n    //glass\n    //76\n    //unstable 5+-\n    //80\n\n    //white\n    //60\n    //unstable 5+-\n    //10 err\n    //60-70\n    wait(10,msec);\n  }\n}\n","textLanguage":"cpp","rconfig":[{"port":[1],"name":"LightGood","customName":true,"deviceType":"Light","deviceClass":"light","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}